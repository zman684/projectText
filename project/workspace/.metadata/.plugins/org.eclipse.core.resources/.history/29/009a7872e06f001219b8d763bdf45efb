package engine;

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;
import weapons.Weapon;
import maps.Point;
import methods.Invo;

public class Engine {
	private static User user;
	private static Invo[] userInvo;
	private static Point location;
	private static int Heading;
	
	/**
	 * All the commands that a user can type in
	 */
	public static void menu(){
		while(true){
			Scanner in = new Scanner(System.in);
			System.out.print(": ");
			String action = in.nextLine();
			if(action.equals("forward") || action.equals("go forward") || action.equals("move forward")){
				System.out.println("You moved forward");
				goForward();
			}else if(action.equals("back") || action.equals("go back") || action.equals("move back")){
				System.out.println("You back up");
				goBack();
			}else if(action.equals("left") || action.equals("turn left")){
				System.out.println("You turn left");
				turnLeft();
			}else if(action.equals("right") || action.equals("turn right")){
				System.out.println("You turn right");
				turnRight();
			}else if(action.equals("location")){
				location();
			}else if(action.equals("equipment")){
				System.out.println(user.equipment());
			}else if(action.equals("equip")){
				equip();
			}else if(action.equals("pickup")){
				pickUp();
			}else if(action.equals("status")){
				System.out.println(user.toString());
			}else if(action.equals("help")){
				help();
			}else if(action.equals("commands")){
				commands();
			}else if(action.equals("look around")){
				System.out.println("You look are and see...");
			}else if(action.equals("exit")){
				System.out.println("goodbye");
				break;
			}else if(action.equals("clear")){
				clear();
			}else{
				System.out.println("That is not a correct command please try again.");
			}
		}
	}
	
	/**
	 * Clears the menu so all text is gone
	 */
	private static void clear() {
		menu();
	}
	
	/**
	 * Player types in equip
	 * then the console asks the user what they want to equip
	 */
	public static void equip(){
		Scanner in = new Scanner(System.in);

		Weapon[] weapons = Utils.read("object/weapons/weapons.csv");
		
		for(int i = 0; i < weapons.length; i++){
			System.out.println(weapons[i]);
		}
		
		
		System.out.print("Equip what: ");
		String item = in.nextLine();
		Invo a = new Invo(item);
		
		System.out.println(item);
		
	}
	
	/**
	 * moves forward one
	 * adds or subtracts x or y
	 * depending on which way they are facing
	 */
	public static void goForward(){
		//north == 1
		//east == 2
		//south == 3
		//west == 4
		if(Heading == 1){
			Point newLocation = new Point(location.getX(),location.getY()+1);
			location = newLocation;
		}else if(Heading == 2){
			Point newLocation = new Point(location.getX()+1,location.getY());
			location = newLocation;
		}else if(Heading == 3){
			Point newLocation = new Point(location.getX(),location.getY()-1);
			location = newLocation;
		}else{
			Point newLocation = new Point(location.getX()-1,location.getY());
			location = newLocation;
		}
	}
	
	/**
	 * Moves back one
	 * adds or subtracts x or y
	 * depending on which way they are facing
	 */
	public static void goBack(){
		if(Heading == 1){
			Point newLocation = new Point(location.getX(),location.getY()-1);
			location = newLocation;
		}else if(Heading == 2){
			Point newLocation = new Point(location.getX()-1,location.getY());
			location = newLocation;
		}else if(Heading == 3){
			Point newLocation = new Point(location.getX(),location.getY()+1);
			location = newLocation;
		}else{
			Point newLocation = new Point(location.getX()+1,location.getY());
			location = newLocation;
		}
	}
	
	/**
	 * Turns right once and changes the heading
	 */
	public static void turnRight(){
		Heading += 1;
	}
	
	/**
	 * Turns left once and changes the heading
	 */
	public static void turnLeft(){
		Heading -= 1;
	}
	
	/**
	 * Tells the user which direction they are facing
	 * and what their location is
	 */
	public static void location(){
		if(Heading == 1){
			System.out.println("You are facing North.");
		}else if(Heading == 2){
			System.out.println("You are facing East.");
		}else if(Heading == 3){
			System.out.println("You are facing South.");
		}else{
			System.out.println("You are facing West.");
		}
		System.out.println("Your Coords are, " + location.toString());
	}
	
	/**
	 * Player types in pickup
	 * then the console will ask what to pick up
	 */
	public static void pickUp(){
		Scanner in = new Scanner(System.in);
		System.out.print("Pickup what: ");
		String item = in.nextLine();
		Invo a = new Invo(item);
		System.out.println("Do you want to pick up: " + item + "?");
		System.out.print("If this is correct please press 1, or press 2 if it is not: "); 
		String c = in.nextLine();
		int option = Integer.parseInt(c);
		
		if(option == 1){
			 Invo[] temp = new Invo[userInvo.length + 1];
             for(int i = 0; i < userInvo.length; i++){
                 temp[i] = userInvo[i]; 
             }
         temp[temp.length - 1] = a;
         userInvo = temp;
         
         saveItem("list/invo.csv",userInvo);
		}
	}
	
	/**
	 * Saves the item to the invo
	 * (autosave) 
	 * @param path Which file to save to
	 * @param acqs Array of invo
	 */
	public static void saveItem(String path, Invo[] acqs) {
		BufferedWriter file;
		
		try {
			file = new BufferedWriter(new FileWriter(path));
			for(int i = 0; i < acqs.length; i++){
				file.write(				
			 acqs[i].getItem() + "\n");
			}
			file.write("\n");
			file.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	/**
	 * Lists of commands that the user name use
	 */
	public static void commands(){
		String commands = "Commands:\n-help";
		commands += "\n-forward";
		commands += "\n-back";
		commands += "\n-left";
		commands += "\n-right";
		commands += "\n-look around";
		commands += "\n-location";
		commands += "\n-status";
		commands += "\n-pickup";
		commands += "\n-equipment";
		commands += "\n-exit";
		System.out.println(commands);
	}
	
	/**
	 * Help and promotion message
	 */
	public static void help(){
		String help = "Help:\n";
		help += "This game is a text adventure created by";
		help += "\nZach Eriksen, if you need to know your";
		help += "\nsurrounding's description again please type";
		help += "\n'look around' or if you need to know what you";
		help += "\ncan type for commands please type 'commands'";
		help += "\nif you have any more questions, ideas, or just";
		help += "\nwant to say somthing please email me at: ";
		help += "\ntoorealc@yahoo.com";
		System.out.println(help);
	}
	
	/**
	 * Starts the game
	 */
	public static void start(){
		Scanner in = new Scanner(System.in);
		System.out.print("What is your name: ");
		String name = in.nextLine();
		user = new User(name);
		location = new Point(0,0);
		Heading = 1;
		String summary = "\nWelcome " + name + "!";
				summary += "\nIf you need help please type 'help'";
				summary += "\nOr if you need to know the commands you can type in 'commands'";
		System.out.println(summary);
	}
}
