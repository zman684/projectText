package start;

import java.util.Scanner;
import monsters.Monster;
import engine.User;

public class Fight {
	private static int turns;
	private static User player;
	private static Monster npc;
	private static String area;
	private static boolean playerWin;

	public Fight(User player, Monster npc, String area) {
		this.player = player;
		this.npc = npc;
		this.area = area;
		this.turns = 0;
		this.playerWin = false;
	}

	public static boolean battle() {
		Scanner in = new Scanner(System.in);

		System.out.println(player.getName() + " VS " + npc.getName());

		while (playerWin == false) {
			turns++;
			if(turns % 2 != 0){attack(1);}
			if(turns % 2 == 0){attack(2);}
		}
		return playerWin = true;
	}

	/**
	 * 1 == npc (this method will mainly use one) 2 == user
	 */
	public static void attack(int attacker) {
		int npcDmg = (npc.getLevel() * npc.getDmg()) - player.getDef();
		int playerDmg = (int) ((player.getLevel() * player.getDmg()) - npc.getDef());
		if (attacker == 1) {
			if((int)(Math.random()*100)+1 <= dodge()){
				System.out.println("You dodged their attack!");
			}else if((int)(Math.random()*100)+1 <= block()){
				System.out.println("You blocked their attack!");
			}else if (npcDmg > 0) {
				System.out.println("You have been hit!");
				System.out.println(npcDmg);

				player.setHealth(player.getHealth() - npcDmg);

				System.out.println("You now have " + player.getHealth());
			}else{
				System.out.println("He missed!");
			}
		}
		if (attacker == 1) {
			if((int)(Math.random()*100)+1 <= dodge()){
				System.out.println("You dodged their attack!");
			}else if((int)(Math.random()*100)+1 <= block()){
				System.out.println("You blocked their attack!");
			}else if (npcDmg > 0) {
				System.out.println("You have been hit!");
				System.out.println(npcDmg);

				player.setHealth(player.getHealth() - npcDmg);

				System.out.println("You now have " + player.getHealth());
			}else{
				System.out.println("He missed!");
			}
		}

	}

	public static int dodge(){
		double dodge = (npc.getWt() / player.getWt())/10;
		return (int) dodge;
	}
	public static int block(){
		double block = (player.getDef()*2)/100;
		return (int) block;
	}

}
